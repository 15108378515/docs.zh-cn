### YamlMime:YamlDocument
documentType: Tutorial
title: "<span data-ttu-id=\"1dd57-101\">C# 初探</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-101\">Hello C#</span></span>"
metadata:
  title: "C# 初探。 读者最先查看的 C# 语言简介。"
  description: "在本快速入门教程中，读者将使用浏览器通过交互方式了解 C#。 读者可以直接在浏览器中编写 C# 代码，并查看代码编译和运行结果。"
  audience: Developer
  level: Beginner
  nextTutorialHref: numbers-in-csharp
  nextTutorialTitle: "<span data-ttu-id=\"1dd57-106\">C# 中的数字</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-106\">Numbers in C#</span></span>"
  displayType: two-column
  interactive: csharp
  ms.custom: mvc
  ms.openlocfilehash: ce1791bd7949c89269b1051d15765f5efd273e7c
  ms.sourcegitcommit: 401c4427a3ec0d1263543033b3084039278509dc
  ms.translationtype: HT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 12/07/2017
items:
- durationInMinutes: 1
  content: "<span data-ttu-id=\"1dd57-107\">本快速入门教程通过交互方式介绍了 C#，读者可以使用浏览器编写 C#，并查看代码编译和运行结果。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-107\">This quick start teaches you C# interactively, using your browser to write C# and see the results of compiling and running your code.</span></span> <span data-ttu-id=\"1dd57-108\">具体包含一系列课程，最先介绍的就是“Hello World”程序。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-108\">It contains a series of lessons that begin with a \"Hello World\" program.</span></span> <span data-ttu-id=\"1dd57-109\">这些课程介绍了 C# 语言的基础知识。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-109\">These lessons teach you the fundamentals of the C# language.</span></span>\n"
- title: "<span data-ttu-id=\"1dd57-110\">运行首个 C# 程序</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-110\">Run your first C# program</span></span>"
  durationInMinutes: 2
  content: "<span data-ttu-id=\"1dd57-111\">在交互式窗口中，运行以下代码。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-111\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"1dd57-112\">为此，请在交互式窗口中键入以下代码块，再单击“运行”按钮：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-112\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nConsole.WriteLine(\"Hello World!\");\n```\n\n<span data-ttu-id=\"1dd57-113\">祝贺你！</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-113\">Congratulations!</span></span> <span data-ttu-id=\"1dd57-114\">已运行首个 C# 程序。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-114\">You've run your first C# program.</span></span> <span data-ttu-id=\"1dd57-115\">这是一个简单程序，可输出消息“Hello World!”。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-115\">It's a simple program that prints the message \"Hello World!\".</span></span> <span data-ttu-id=\"1dd57-116\">它使用 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 方法打印此消息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-116\">It used the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method to print that message.</span></span> <span data-ttu-id=\"1dd57-117\">`Console` 是表示控制台窗口的类型。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-117\">`Console` is a type that represents the console window.</span></span> <span data-ttu-id=\"1dd57-118\">`WriteLine` 是 `Console` 类型的方法，负责将文本行打印到文本控制台。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-118\">`WriteLine` is a method of the `Console` type that prints a line of text to that text console.</span></span>\n\n<span data-ttu-id=\"1dd57-119\">接下来，将继续进一步探索。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-119\">Let's move on and explore more.</span></span> <span data-ttu-id=\"1dd57-120\">本课程的其余部分探索了如何使用在 C# 中表示文本的 `string` 类型。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-120\">The rest of this lesson explores working with the `string` type, which represents text in C#.</span></span> <span data-ttu-id=\"1dd57-121\">与 `Console` 类型一样，`string` 类型也包含方法。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-121\">Like the `Console` type, the `string` type has methods.</span></span> <span data-ttu-id=\"1dd57-122\">`string` 方法处理的是文本。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-122\">The `string` methods work with text.</span></span> \n\n> [!NOTE]\n> <span data-ttu-id=\"1dd57-123\">此联机编码体验处于预览模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-123\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"1dd57-124\">如果遇到问题，请[在 dotnet/try 存储库上](https://github.com/dotnet/try/issues)进行报告。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-124\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"1dd57-125\">声明和使用变量</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-125\">Declare and use variables</span></span>"
  durationInMinutes: 3
  content: "<span data-ttu-id=\"1dd57-126\">首个程序在屏幕上打印出了 `string`“Hello World!”</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-126\">Your first program printed the `string` \"Hello World!\"</span></span> <span data-ttu-id=\"1dd57-127\">。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-127\">on the screen.</span></span> \n\n> [!TIP]\n> <span data-ttu-id=\"1dd57-128\">在探索 C#（或任何编程语言）的过程中，可能会在编写代码时犯错。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-128\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"1dd57-129\">编译器会发现并报告这些错误。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-129\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"1dd57-130\">如果输出中有错误消息，请仔细比对示例代码和交互式窗口中的代码，看看要纠正哪些代码。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-130\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"1dd57-131\">这样做有助于了解 C# 代码结构。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-131\">That exercise will help you learn the structure of C# code.</span></span> \n\n<span data-ttu-id=\"1dd57-132\">首个程序只能打印一条消息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-132\">Your first program is limited to printing one message.</span></span> <span data-ttu-id=\"1dd57-133\">可以使用变量编写更实用的程序。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-133\">You can write more useful programs by using **variables**.</span></span> <span data-ttu-id=\"1dd57-134\">借助变量符号，可以使用不同的值运行同一代码。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-134\">A **variable** is a symbol you can use to run the same code with different values.</span></span> <span data-ttu-id=\"1dd57-135\">试一试吧！</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-135\">Let's try it!</span></span> <span data-ttu-id=\"1dd57-136\">将在交互式窗口中已编写的代码替换为以下代码：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-136\">Replace the code you've written in the interactive window with the following code:</span></span>\n\n```csharp\nstring aFriend = \"Bill\";\nConsole.WriteLine(aFriend);\n```\n\n<span data-ttu-id=\"1dd57-137\">第一行代码声明变量 `aFriend`，并为它分配值“Bill”。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-137\">The first line declares a variable, `aFriend` and assigns it a value, \"Bill\".</span></span> <span data-ttu-id=\"1dd57-138\">第二行代码打印出姓名。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-138\">The second line prints out the name.</span></span>\n\n<span data-ttu-id=\"1dd57-139\">可以向声明的任何变量分配不同的值。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-139\">You can assign different values to any variable you declare.</span></span> <span data-ttu-id=\"1dd57-140\">可以将姓名更改为自己一个好友的姓名。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-140\">You can change the name to one of your friends.</span></span> <span data-ttu-id=\"1dd57-141\">在交互式窗口中已添加的代码后面，添加以下两行代码：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-141\">Add these two lines in the interactive window following the code you've already added:</span></span>\n\n```csharp\naFriend = \"Maria\";\nConsole.WriteLine(aFriend);\n```\n\n<span data-ttu-id=\"1dd57-142\">可以看到，同一行代码根据 `aFriend` 变量中存储的值，打印两条不同的消息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-142\">Notice that the same line of code prints two different messages, based on the value stored in the `aFriend` variable.</span></span>\n\n<span data-ttu-id=\"1dd57-143\">可能还会注意到，最后两条消息中没有“Hello”一词。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-143\">You may have also noticed that the word \"Hello\" was missing in the last two messages.</span></span> <span data-ttu-id=\"1dd57-144\">现在就来解决一下这个问题。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-144\">Let's fix that now.</span></span>  <span data-ttu-id=\"1dd57-145\">将负责打印消息的代码行修改为以下代码：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-145\">Modify the lines that print the message to the following:</span></span>\n\n```csharp\nConsole.WriteLine(\"Hello \" + aFriend);\n```\n\n<span data-ttu-id=\"1dd57-146\">再次单击“运行”，看看结果如何。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-146\">Click **Run** again to see the results.</span></span>\n\n<span data-ttu-id=\"1dd57-147\">在此过程中，使用 `+` 创建用于打印的字符串变得非常麻烦。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-147\">As we progress, creating strings to print using `+` becomes cumbersome.</span></span> <span data-ttu-id=\"1dd57-148\">借助字符串内插，可以通过更简洁、更具可读性的方式组合字符串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-148\">String interpolation lets you piece together strings in a more concise and readable way.</span></span>\n\n<span data-ttu-id=\"1dd57-149\">如果在字符串的左引号前添加 `$`，则可在大括号的字符串内，添加字符串表达式，如 `aFriend` 变量。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-149\">If you add a `$` before the opening quotes of the string, you can then include string expressions, like the `aFriend` variable, inside the string in curly brackets.</span></span>\n\n\n```csharp\nConsole.WriteLine($\"Hello {aFriend}\");\n```\n\n<span data-ttu-id=\"1dd57-150\">再次单击“运行”，看看结果如何。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-150\">Click **Run** again to see the results.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"1dd57-151\">此联机编码体验处于预览模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-151\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"1dd57-152\">如果遇到问题，请[在 dotnet/try 存储库上](https://github.com/dotnet/try/issues)进行报告。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-152\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"1dd57-153\">使用字符串</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-153\">Work with strings</span></span>"
  durationInMinutes: 5
  content: "<span data-ttu-id=\"1dd57-154\">上次编辑是对字符串用途的初探。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-154\">Your last edit was our first look at what you can do with strings.</span></span> <span data-ttu-id=\"1dd57-155\">接下来，将进一步探索。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-155\">Let's explore more.</span></span>\n\n<span data-ttu-id=\"1dd57-156\">`+` 是 C# 运算符。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-156\">The `+` is called an operator in C#.</span></span> <span data-ttu-id=\"1dd57-157\">如果应用于字符串（如 `firstString + secondString`），则会新建一个字符串，内含第一个字符串的文本，后跟第二个字符串的文本。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-157\">When applied to strings like `firstString + secondString`, a new string is created with the text from the first followed by the text from the second.</span></span> <span data-ttu-id=\"1dd57-158\">这称为“字符串串联”。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-158\">This is referred to as *string concatenation*.</span></span> <span data-ttu-id=\"1dd57-159\">可以组合任意数量的字符串，包括字符串变量。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-159\">You can combine any number of strings, including string variables.</span></span>  <span data-ttu-id=\"1dd57-160\">试运行以下代码：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-160\">Try this:</span></span>\n\n```csharp\nstring firstFriend = \"Maria\";\nstring secondFriend = \"Sage\";\nConsole.WriteLine($\"My friends are {firstFriend} and {secondFriend}\");\n```\n\n<span data-ttu-id=\"1dd57-161\">在进一步探索字符串的过程中，发现可以使用 `Length` 确定字符串长度。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-161\">As you explore more with strings, you can find the length of a string using `Length`.</span></span> <span data-ttu-id=\"1dd57-162\">`Length` 是字符串属性，可返回字符串中的字符数。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-162\">`Length` is a **property** of a string and it returns the number of characters in that string.</span></span> <span data-ttu-id=\"1dd57-163\">在交互式窗口的底部，添加以下代码：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-163\">Add the following code at the bottom of the interactive window:</span></span>\n\n```csharp\nConsole.WriteLine($\"The name {firstFriend} has {firstFriend.Length} letters.\");\nConsole.WriteLine($\"The name {secondFriend} has {secondFriend.Length} letters.\");\n```\n\n> [!TIP]\n> <span data-ttu-id=\"1dd57-164\">这是自行探索的良好时机。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-164\">This is a good time to explore on your own.</span></span> <span data-ttu-id=\"1dd57-165\">已了解到，`Console.WriteLine()` 将文本写入屏幕。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-165\">You've learned that `Console.WriteLine()` writes text to the screen.</span></span> <span data-ttu-id=\"1dd57-166\">也已学习了如何声明变量，以及如何串联字符串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-166\">You've learned how to declare variables and concatenate strings together.</span></span> <span data-ttu-id=\"1dd57-167\">在交互式窗口中试一试吧。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-167\">Experiment in the interactive window.</span></span> <span data-ttu-id=\"1dd57-168\">试着自已编写其他一些消息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-168\">Write some more messages yourself.</span></span> <span data-ttu-id=\"1dd57-169\">使用 `+` 运算符生成字符串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-169\">Build strings using the `+` operator.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"1dd57-170\">此联机编码体验处于预览模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-170\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"1dd57-171\">如果遇到问题，请[在 dotnet/try 存储库上](https://github.com/dotnet/try/issues)进行报告。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-171\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"1dd57-172\">发掘字符串的更多精彩用途</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-172\">Do more with strings</span></span>"
  durationInMinutes: 5
  content: "<span data-ttu-id=\"1dd57-173\">一直在使用方法 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 打印消息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-173\">You've been using a **method**, <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>, to print messages.</span></span> <span data-ttu-id=\"1dd57-174\">方法是用于实现某操作的代码块。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-174\">A **method** is a block of code that implements some action.</span></span> <span data-ttu-id=\"1dd57-175\">它有名称，这样就可以访问方法了。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-175\">It has a name, so you can access it.</span></span> \n\n<span data-ttu-id=\"1dd57-176\">`string` 类型包含许多实用方法。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-176\">The `string` type has many useful methods.</span></span> <span data-ttu-id=\"1dd57-177\">接下来，将探索 <xref:System.String.Trim%2A> 方法及相关方法 <xref:System.String.TrimStart%2A> 和 <xref:System.String.TrimEnd%2A>。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-177\">Let's explore the <xref:System.String.Trim%2A> method, and related methods <xref:System.String.TrimStart%2A> and <xref:System.String.TrimEnd%2A>.</span></span> <span data-ttu-id=\"1dd57-178\">这些方法用于删除前导空格和尾随空格：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-178\">These methods remove leading and trailing spaces:</span></span>\n\n```csharp\nstring message = \"      Hello World!       \";\nConsole.WriteLine($\"[{message}]\");\n\nstring trimmedMessage = message.TrimStart();\nConsole.WriteLine($\"[{trimmedMessage}]\");\n\ntrimmedMessage = message.TrimEnd();\nConsole.WriteLine($\"[{trimmedMessage}]\");\n\ntrimmedMessage = message.Trim();\nConsole.WriteLine($\"[{trimmedMessage}]\");\n```\n\n<span data-ttu-id=\"1dd57-179\">此示例强调了使用字符串时需要注意的几个重要概念。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-179\">This sample reinforces a couple of important concepts for working with strings.</span></span> <span data-ttu-id=\"1dd57-180\">控制字符串的方法返回的是新字符串对象，而不是就地进行修改。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-180\">The methods that manipulate strings return new string objects rather than making modifications in place.</span></span> <span data-ttu-id=\"1dd57-181\">可以看到，对任何 `Trim` 方法的所有调用都是返回新字符串，而不是更改原始消息。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-181\">You can see that each call to any of the `Trim` methods returns a new string, but does not change the original message.</span></span>\n\n<span data-ttu-id=\"1dd57-182\">还可以通过其他方法使用字符串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-182\">There are other methods available to work with a string.</span></span> <span data-ttu-id=\"1dd57-183\">例如，可能已在编辑器或字处理器中使用了搜索和替换命令。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-183\">For example, you've probably used a search and replace command in an editor or word processor.</span></span> <span data-ttu-id=\"1dd57-184\"><xref:System.String.Replace%2A> 方法在 `string` 中执行类似操作。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-184\">The <xref:System.String.Replace%2A> method does something similar in a `string`.</span></span> <span data-ttu-id=\"1dd57-185\">此方法搜索子字符串，并将它替换为其他文本。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-185\">It searches for a substring, and replaces it with different text.</span></span> <span data-ttu-id=\"1dd57-186\"><xref:System.String.Replace%2A> 方法需要使用两个参数。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-186\">The <xref:System.String.Replace%2A> method takes two **parameters**.</span></span> <span data-ttu-id=\"1dd57-187\">这两个字符串用括号括住。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-187\">These are the strings between the parentheses.</span></span> <span data-ttu-id=\"1dd57-188\">第一个字符串是要搜索的文本。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-188\">The first string is the text to search for.</span></span> <span data-ttu-id=\"1dd57-189\">第二个字符串是替换后的文本。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-189\">The second string is the text to replace it with.</span></span> <span data-ttu-id=\"1dd57-190\">亲自试一试吧。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-190\">Try it for yourself.</span></span> <span data-ttu-id=\"1dd57-191\">添加以下代码：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-191\">Add this code:</span></span>\n\n```csharp\nstring message = \"Hello World!\";\nConsole.WriteLine(message);\nmessage = message.Replace(\"Hello\", \"Greetings\");\nConsole.WriteLine(message);\n```\n\n<span data-ttu-id=\"1dd57-192\">还有两个实用方法，可以将字符串设为全部大写或小写。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-192\">Two other useful methods make a string ALL CAPS or all lower case.</span></span> <span data-ttu-id=\"1dd57-193\">试运行以下代码：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-193\">Try the following code:</span></span>\n\n```csharp\nstring message = \"Hello World!\";\nConsole.WriteLine(message);\nConsole.WriteLine(message.ToUpper());\nConsole.WriteLine(message.ToLower());\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"1dd57-194\">此联机编码体验处于预览模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-194\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"1dd57-195\">如果遇到问题，请[在 dotnet/try 存储库上](https://github.com/dotnet/try/issues)进行报告。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-195\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"1dd57-196\">搜索字符串</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-196\">Search strings</span></span>"
  durationInMinutes: 10
  content: "<span data-ttu-id=\"1dd57-197\">搜索和替换操作的另一方面是，查找字符串中的文本。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-197\">The other part of a *search and replace* operation is to find text in a string.</span></span> <span data-ttu-id=\"1dd57-198\">可以使用 <xref:System.String.Contains%2A> 方法进行搜索。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-198\">You can use the  <xref:System.String.Contains%2A> method for searching.</span></span> <span data-ttu-id=\"1dd57-199\">此方法可确定字符串是否包含子字符串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-199\">It tells you if a string contains a substring inside it.</span></span> <span data-ttu-id=\"1dd57-200\">若要探索 <xref:System.String.Contains%2A>，请试运行以下代码：</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-200\">Try the following code to explore <xref:System.String.Contains%2A>:</span></span>\n\n```csharp\nstring message = \"You say goodbye, and I say hello\";\nConsole.WriteLine(message.Contains(\"goodbye\"));\nConsole.WriteLine(message.Contains(\"greetings\"));\n```\n\n<span data-ttu-id=\"1dd57-201\"><xref:System.String.Contains%2A> 方法返回布尔值，指明是否找到了要搜索的字符串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-201\">The <xref:System.String.Contains%2A> method returns a **boolean** value which tells you if the string you were searching for was found.</span></span> <span data-ttu-id=\"1dd57-202\">布尔变量存储 `true` 或 `false` 值。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-202\">A **boolean** stores either a `true` or a `false` value.</span></span> <span data-ttu-id=\"1dd57-203\">今后推出的课程将详细介绍布尔值。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-203\">You'll learn more about **boolean** values in a later lesson.</span></span>\n\n<span data-ttu-id=\"1dd57-204\">***挑战***</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-204\">***Challenge***</span></span>\n\n<span data-ttu-id=\"1dd57-205\">有两个类似方法 <xref:System.String.StartsWith%2A> 和 <xref:System.String.EndsWith%2A>，也可以在字符串中搜索子字符串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-205\">There are two similar methods, <xref:System.String.StartsWith%2A> and <xref:System.String.EndsWith%2A> that also search for sub-strings in a string.</span></span> <span data-ttu-id=\"1dd57-206\">这些方法搜索字符串开头或结尾的子字符串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-206\">These find a substring at the beginning or the end of the string.</span></span> <span data-ttu-id=\"1dd57-207\">试着将上一示例修改为使用 <xref:System.String.StartsWith%2A> 和 <xref:System.String.EndsWith%2A>，而不是使用 <xref:System.String.Contains%2A>。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-207\">Try to modify the previous sample to use <xref:System.String.StartsWith%2A> and <xref:System.String.EndsWith%2A> instead of <xref:System.String.Contains%2A>.</span></span> <span data-ttu-id=\"1dd57-208\">搜索字符串开头是否有“You”或“goodbye”。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-208\">Search for \"You\" or \"goodbye\" at the beginning of a string.</span></span> <span data-ttu-id=\"1dd57-209\">搜索字符串末尾是否有“hello”或“goodbye”。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-209\">Search for \"hello\" or \"goodbye\" at the end of a string.</span></span>\n\n> [!Note]\n> <span data-ttu-id=\"1dd57-210\">针对字符串结尾文本测试时，请注意标点符号。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-210\">Watch your punctuation when you test for the text at the end of the string.</span></span> <span data-ttu-id=\"1dd57-211\">如果字符串以句点结尾，必须检查是否有以句点结尾的字符串。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-211\">If the string ends with a period, you must check for a string that ends with a period.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"1dd57-212\">此联机编码体验处于预览模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-212\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"1dd57-213\">如果遇到问题，请[在 dotnet/try 存储库上](https://github.com/dotnet/try/issues)进行报告。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-213\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"1dd57-214\">完成挑战</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-214\">Complete challenge</span></span>"
  durationInMinutes: 3
  content: "<span data-ttu-id=\"1dd57-215\">最后是否生成如下代码？</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-215\">Did you come up with something like this?</span></span>\n\n```csharp\nstring message = \"You say goodbye, and I say hello\";\nConsole.WriteLine(message.StartsWith(\"You\"));\nConsole.WriteLine(message.StartsWith(\"goodbye\"));\n\nConsole.WriteLine(message.EndsWith(\"hello\"));\nConsole.WriteLine(message.EndsWith(\"goodbye\"));\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"1dd57-216\">此联机编码体验处于预览模式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-216\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"1dd57-217\">如果遇到问题，请[在 dotnet/try 存储库上](https://github.com/dotnet/try/issues)进行报告。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-217\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- content: "<span data-ttu-id=\"1dd57-218\">已完成“C# 初探”快速入门教程。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-218\">You've completed the \"Hello C#\" quick start.</span></span>\n\n<span data-ttu-id=\"1dd57-219\">可以在自己的开发环境中继续这些快速入门教程。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-219\">You can continue these quick starts on your own development environment.</span></span> <span data-ttu-id=\"1dd57-220\">.NET 主题 [10 分钟入门](https://www.microsoft.com/net/core)介绍了如何设置本地开发环境。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-220\">The .NET topic [Get Started in 10 minutes](https://www.microsoft.com/net/core) has instructions for setting up your local development environment.</span></span> <span data-ttu-id=\"1dd57-221\">完成之后，请在本地环境中继续完成 [C# 中的数字](numbers-in-csharp-local.md)。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-221\">Once you've done that, continue with [Numbers in C#](numbers-in-csharp-local.md) in your local environment.</span></span>\n\n<span data-ttu-id=\"1dd57-222\">若要详细了解如何使用 `string` 类型，可以参阅有关[字符串](../programming-guide/strings/index.md)的 [C# 编程指南](../programming-guide/index.md)主题。</span><span class=\"sxs-lookup\"><span data-stu-id=\"1dd57-222\">You can learn more about working with the `string` type in the [C# Programming Guide](../programming-guide/index.md) topic on [strings](../programming-guide/strings/index.md).</span></span>\0"
